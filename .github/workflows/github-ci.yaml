name: Publish Chrome Extension

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Compare manifest versions
        id: version_check
        run: |
          # Extract previous and current versions
          git show HEAD~1:manifest.json | jq -r '.version' > prev_version.txt
          jq -r '.version' < manifest.json > curr_version.txt

          prev_version=$(cat prev_version.txt)
          curr_version=$(cat curr_version.txt)
          echo "Previous version: $prev_version"
          echo "Current version: $curr_version"

          # Check if versions are semantically correct
          if [ -z "$prev_version" ] || [ -z "$curr_version" ]; then
            echo "Version information is missing. Failing the build."
            exit 1
          fi

          # Function to compare versions
          compare_versions() {
            version1=$1
            version2=$2
            if [ "$version1" = "$version2" ]; then
              return 0
            fi

            # Convert versions to a format that can be compared
            version1=$(echo "$version1" | awk -F. '{printf("%04d%04d%04d\n", $1, $2, $3)}')
            version2=$(echo "$version2" | awk -F. '{printf("%04d%04d%04d\n", $1, $2, $3)}')

            if [ "$version1" -lt "$version2" ]; then
              return 1
            else
              return 0
            fi
          }

          # Compare versions and handle the result
          compare_versions "$prev_version" "$curr_version"
          if [ $? -eq 1 ]; then
            echo "Version has increased. Proceeding with the build."
          else
            echo "Version has not increased. Failing the build."
            exit 1
          fi

      - name: Zip Extension
        run: |
          mkdir -p build
          zip -r build/extension.zip . -x ".git/*" ".github/*"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: extension-zip
          path: build/extension.zip

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: extension-zip
          path: build

      - name: Publish to Chrome Web Store
        uses: trmcnvn/chrome-addon@v2
        with:
          extension: ${{ secrets.CHROME_EXTENSION_ID }}
          zip: build/extension.zip
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
